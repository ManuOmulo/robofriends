{"version":3,"sources":["constants/constants.js","reducers/searchRobotsReducer.js","reducers/requestRobotsReducers.js","reducers/rootReducer.js","serviceWorkerRegistration.js","components/searchComponent.js","containers/Search.js","actions/actions.js","components/cardComponent.js","containers/Card.js","custom/ErrorBondary.js","custom/Scroll.js","components/Header.js","App.js","index.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchField","initialStateRobots","isPending","robots","error","rootReducer","combineReducers","searchRobotsReducer","state","action","type","payload","requestRobotsReducer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","SearchComponent","props","searchChange","className","placeholder","onChange","Search","dispatch","useDispatch","e","text","target","value","CardList","robot","id","name","email","src","alt","Card","robotList","useSelector","useEffect","fetch","res","json","data","card","filter","toLowerCase","includes","map","display","length","ErrorBoundary","hasError","info","this","setState","children","Component","Scroll","Header","App","logger","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"+QAAaA,EAAsB,sBACtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAwB,wBCD/BC,EAAqB,CACzBC,YAAa,ICITC,EAAqB,CACzBC,WAAW,EACXC,OAAQ,GACRC,MAAO,ICAMC,EALKC,YAAgB,CAClCC,oBFAiC,WAA0C,IAAzCC,EAAwC,uDAAlCT,EAAoBU,EAAc,uDAAP,GACnE,OAAOA,EAAOC,MACZ,KAAKf,EACH,OAAO,2BAAKa,GAAZ,IAAmBR,YAAaS,EAAOE,UACzC,QACC,OAAOH,IEJVI,qBDMkC,WAA0C,IAAzCJ,EAAwC,uDAAlCP,EAAoBQ,EAAc,uDAAP,GACpE,OAAQA,EAAOC,MACb,KAAKd,EACH,OAAO,2BAAKY,GAAZ,IAAmBN,WAAW,IAEhC,KAAKL,EACH,OAAO,2BAAKW,GAAZ,IAAmBL,OAAQM,EAAOE,QAAST,WAAW,IAExD,KAAKJ,EACH,OAAO,2BAAIU,GAAX,IAAkBJ,MAAOK,EAAOE,QAAST,WAAW,IAEtD,QACE,OAAOM,MEbPK,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpB,QACfc,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,+GAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAChC,GACN4B,QAAQ5B,MAAM,4CAA6CA,M,uBC9ElDiC,EAdS,SAACC,GAAW,IAE1BC,EAAiBD,EAAjBC,aACR,OACE,qBAAKC,UAAU,SAAf,SACE,uBACE9B,KAAK,SACL+B,YAAY,gBACZC,SAAUH,OCcHI,EAhBA,WACb,IAAMC,EAAWC,cAMjB,OACE,8BACE,cAAC,EAAD,CACEN,aAPiB,SAACO,GCJI,IAACC,EDK3BH,GCL2BG,EDKHD,EAAEE,OAAOC,MCLI,CACvCvC,KAAMf,EACNgB,QAASoC,WCSIG,G,MAhBG,SAACZ,GAAW,IAAD,EAECA,EAAMa,MAA1BC,EAFmB,EAEnBA,GAAIC,EAFe,EAEfA,KAAMC,EAFS,EAETA,MAElB,OACE,sBAAKd,UAAU,OAAf,UACE,qBAAKe,IAAG,+BAA0BH,EAA1B,YAAwCI,IAAI,WACpD,oCACE,6BAAKH,IACL,4BAAIC,YCgCGG,EAnCF,WAEX,IAAMC,EAAYC,aAAY,SAAAnD,GAAK,OAAIA,EAAMI,qBAAqBT,UAC5DH,EAAc2D,aAAY,SAAAnD,GAAK,OAAIA,EAAMD,oBAAoBP,eAC7D4C,EAAWC,cAEjBe,qBAAU,WACRhB,GFH+B,SAAAA,GACjCA,EAAS,CAAClC,KAAMd,IAChBiE,MAAM,8CACHpC,MAAK,SAAAqC,GAAG,OAAIA,EAAIC,UAChBtC,MAAK,SAAAuC,GAAI,OAAIpB,EAAS,CAAElC,KAAMb,EAAwBc,QAASqD,OAC/D5B,OAAM,SAAAhC,GAAK,OAAIwC,EAAS,CAAElC,KAAMZ,EAAuBa,QAASP,YEDhE,CAACwC,IAEJ,IAIMqB,EAJiBP,EAAUQ,QAAO,SAAAf,GAAK,OAC3CA,EAAME,KAAKc,cAAcC,SAASpE,EAAYmE,kBAGpBE,KAAI,SAAAlB,GAC9B,OACE,cAAC,EAAD,CAA8BA,MAAOA,GAAjBA,EAAMC,OAIxBkB,EAAYZ,EAAUa,OAGxB,qBAAK/B,UAAU,iBAAf,SACGyB,IAHL,yCAOF,OACE,8BACGK,K,gCCTQE,E,kDA1Bb,WAAYlC,GAAQ,IAAD,8BACjB,cAAMA,IACD9B,MAAQ,CACXiE,UAAU,GAHK,E,qDAOnB,SAAkBrE,EAAOsE,GACvBC,KAAKC,SAAS,CACZH,UAAU,M,oBAKd,WAIE,OAFqBE,KAAKnE,MAAlBiE,SAGC,sDAEAE,KAAKrC,MAAMuC,a,GAtBIC,aCUbC,G,MARA,SAACzC,GACd,OACE,yBAASE,UAAU,aAAnB,SACGF,EAAMuC,aCGEG,MARf,WACE,OACE,qBAAKxC,UAAU,iBAAf,SACI,gDCkBOyC,EAdH,WACV,OACE,gCACE,cAAC,EAAD,IACA,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,UACE,cAAC,EAAD,aCFJC,EAASC,yBACTC,EAAQC,YAAYhF,EAAaiF,YAAgBC,IAAiBL,IAExEM,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,IAAMM,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SVHnB,SAAkBvE,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIuE,IAAIC,eAAwB/E,OAAOC,SAAS+E,MACpDC,SAAWjF,OAAOC,SAASgF,OAIvC,OAGFjF,OAAOkF,iBAAiB,QAAQ,WAC9B,IAAM7E,EAAK,UAAM0E,eAAN,sBAEPjF,IAgEV,SAAiCO,EAAOC,GAEtCwC,MAAMzC,EAAO,CACX8E,QAAS,CAAE,iBAAkB,YAE5BzE,MAAK,SAAC0E,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CjF,UAAUC,cAAciF,MAAM/E,MAAK,SAACC,GAClCA,EAAa+E,aAAahF,MAAK,WAC7BV,OAAOC,SAAS0F,eAKpBvF,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IAAI,oEAtFV0E,CAAwBvF,EAAOC,GAI/BC,UAAUC,cAAciF,MAAM/E,MAAK,WACjCO,QAAQC,IACN,+GAMJd,EAAgBC,EAAOC,OUnB/BuF,K","file":"static/js/main.7a894fb3.chunk.js","sourcesContent":["export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\"\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\"\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\"\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\"","import { CHANGE_SEARCH_FIELD } from \"../constants/constants\"\n\nconst initialStateSearch = {\n  searchField: \"\"\n}\n\nexport const searchRobotsReducer = (state=initialStateSearch, action={}) => {\n  switch(action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return { ...state, searchField: action.payload }\n    default:\n     return state\n  }\n}","import {\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n} from \"../constants/constants\"\n\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: \"\"\n}\n\nexport const requestRobotsReducer = (state=initialStateRobots, action={}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return { ...state, isPending: true }\n\n    case REQUEST_ROBOTS_SUCCESS:\n      return { ...state, robots: action.payload, isPending: false }\n\n    case REQUEST_ROBOTS_FAILED:\n      return {...state, error: action.payload, isPending: false }\n\n    default:\n      return state\n  }\n}","import { combineReducers } from \"redux\"\n\nimport { searchRobotsReducer } from \"./searchRobotsReducer\"\nimport { requestRobotsReducer } from \"./requestRobotsReducers\"\n\nconst rootReducer = combineReducers({\n  searchRobotsReducer,\n  requestRobotsReducer\n})\n\nexport default rootReducer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\n\nconst SearchComponent = (props) => {\n\n  const { searchChange } = props\n  return (\n    <div className=\"search\">\n      <input\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  )\n}\n\nexport default SearchComponent","import React from \"react\"\n\nimport { useDispatch } from \"react-redux\"\nimport { setSearchField } from \"../actions/actions\"\n\nimport SearchComponent from \"../components/searchComponent\"\n\n\nconst Search = () => {\n  const dispatch = useDispatch()\n\n  const onSearchChange = (e) => {\n    dispatch(setSearchField(e.target.value))\n  }\n\n  return (\n    <div>\n      <SearchComponent\n        searchChange={onSearchChange}\n      />\n    </div>\n  )\n}\n\nexport default Search","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n} from \"../constants/constants\"\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n})\n\nexport const requestRobots = () => dispatch => {\n  dispatch({type: REQUEST_ROBOTS_PENDING})\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(res => res.json())\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error}))\n}","import React from \"react\"\n\nconst CardList  = (props) => {\n\n  const { id, name, email } = props.robot\n\n  return (\n    <div className=\"card\">\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\n      <article>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </article>\n    </div>\n  )\n\n}\n\nexport default CardList","import React, { useEffect } from \"react\"\n\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { requestRobots } from \"../actions/actions\"\n\nimport \"./card.css\"\nimport CardComponent from \"../components/cardComponent\"\n\nconst Card = () => {\n\n  const robotList = useSelector(state => state.requestRobotsReducer.robots)\n  const searchField = useSelector(state => state.searchRobotsReducer.searchField)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(requestRobots())\n  }, [dispatch])\n\n  const filteredRobots = robotList.filter(robot => (\n    robot.name.toLowerCase().includes(searchField.toLowerCase())\n  ))\n\n  const card = filteredRobots.map(robot => {\n    return(\n      <CardComponent key={robot.id} robot={robot}/>\n    )\n  })\n\n  const display = (!robotList.length) ?\n    <h1>Loading</h1> :\n    (\n      <div className=\"card-container\">\n        {card}\n      </div>\n    )\n\n  return(\n    <div>\n      {display}\n    </div>\n  )\n}\n\nexport default Card","import React, { Component } from \"react\"\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      hasError: true\n    })\n  }\n\n\n  render() {\n\n    const { hasError } = this.state\n\n    if (hasError) {\n      return <h1>Something Went Wrong</h1>\n    } else {\n      return this.props.children\n    }\n  }\n}\n\nexport default ErrorBoundary","import React from \"react\"\n\nimport \"./scroll.css\"\n\nconst Scroll = (props) => {\n  return (\n    <article className=\"scrollable\">\n      {props.children}\n    </article>\n  )\n}\n\nexport default Scroll","import React from 'react'\n\nfunction Header() {\n  return (\n    <div className=\"head-container\">\n        <h1>RoboFriends</h1>\n    </div>\n  )\n}\n\nexport default Header\n","import React from \"react\"\n\nimport \"./App.css\"\nimport Search from \"./containers/Search\"\nimport Card from \"./containers/Card\"\nimport ErrorBoundary from \"./custom/ErrorBondary\";\nimport Scroll from \"./custom/Scroll\"\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  return(\n    <div>\n      <Header />\n      <ErrorBoundary>\n        <Search />\n        <Scroll>\n          <Card />\n        </Scroll>\n      </ErrorBoundary>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from \"react-redux\"\nimport { createStore, applyMiddleware } from \"redux\"\nimport { createLogger } from \"redux-logger\"\nimport thunkMiddleware from \"redux-thunk\"\nimport rootReducer from \"./reducers/rootReducer\"\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport \"./index.css\"\nimport App from './App';\n\nconst logger = createLogger()\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n"],"sourceRoot":""}